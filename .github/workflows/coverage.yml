# This is a basic workflow to help you get started with Actions

name: Cov

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      # Caching helps speed up installs (and therefore the testing)
      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('setup.py') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install .
      - name: Generate coverage report
        run: pytest --cov=tests --cov-report=xml tests/
      - name: Codecov
        uses: codecov/codecov-action@v2.0.2
        with:
          # Repository upload token - get it from codecov.io. Required only for private repositories
          token: 3ec85be0-8484-4302-9ba8-970464a26610
          # Comma-separated list of files to upload
          files: # optional
          # Directory to search for coverage reports.
          directory: tests
          # Flag upload to group coverage metrics (e.g. unittests | integration | ui,chrome)
          flags: # optional
          # The commit SHA of the parent for which you are uploading coverage. If not present, the parent will be determined using the API of your repository provider.  When using the repository providers API, the parent is determined via finding the closest ancestor to the commit.
          commit_parent: # optional
          # Don't upload files to Codecov
          dry_run: # optional
          # Environment variables to tag the upload with (e.g. PYTHON | OS,PYTHON)
          env_vars: PYTHON
          # Specify whether or not CI build should fail if Codecov runs into an error during upload
          fail_ci_if_error: # optional
          # Path to coverage file to upload
          file: ./coverage.xml
          # Comma-separated list, see the README for options and their usage
          functionalities: # optional
          # Move discovered coverage reports to the trash
          move_coverage_to_trash: # optional
          # User defined upload name. Visible in Codecov UI
          name: railflow
          # Specify the branch name
          override_branch: # optional
          # Specify the build number
          override_build: # optional
          # Specify the commit SHA
          override_commit: # optional
          # Specify the pull request number
          override_pr: # optional
          # Specify the git tag
          override_tag: # optional
          # Used when not in git/hg project to identify project root directory
          root_dir: # optional
          # Specify the slug manually (Enterprise use)
          slug: # optional
          # Change the upload host (Enterprise use)
          url: # optional
          # Specify whether the Codecov output should be verbose
          verbose: # optional
          # Directory in which to execute codecov.sh
          working-directory: # optional
